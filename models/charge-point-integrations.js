// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const ChargePointIntegrations = sequelize.define('chargePointIntegrations', {
    name: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    description: {
      type: DataTypes.STRING,
    },
    identifier: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    type: {
      type: DataTypes.ENUM('web','single-step'),
      allowNull: false,
    },
    credentialsFields: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    visible: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    configScheduler: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    configPoll: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    configStartSequence: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    configStopSequence: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    configMeterReading: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    configMeterReadingCharges: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    configAuthTokens: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    deletedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'charge_point_integrations',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  ChargePointIntegrations.associate = (models) => {
    ChargePointIntegrations.hasMany(models.chargePointIntegration, {
      foreignKey: {
        name: 'integrationIdKey',
        field: 'integration_id',
      },
      as: 'integrationChargePointIntegrations',
    });
    ChargePointIntegrations.hasMany(models.chargePointModelIntegration, {
      foreignKey: {
        name: 'integrationIdKey',
        field: 'integration_id',
      },
      as: 'integrationChargePointModelIntegrations',
    });
  };

  return ChargePointIntegrations;
};
