// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const HubjectOperators = sequelize.define('hubjectOperators', {
    operator: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    name: {
      type: DataTypes.STRING,
    },
    comment: {
      type: DataTypes.STRING,
    },
    priceMethod: {
      type: DataTypes.ENUM('none','hubject-dynamic','custom','internal'),
      defaultValue: "none",
      allowNull: false,
    },
    syncEvseStatus: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    syncEvse: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    syncPriceProducts: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    setChargePointsPublic: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    priceProductSyncedAt: {
      type: DataTypes.DATE,
    },
    priceProducts: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    dynamicPrices: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    customPrices: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    log: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    totalChargePoints: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    activeChargePoints: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    inactiveChargePoints: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    publicChargePoints: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    privateChargePoints: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    pricedChargePoints: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    unpricedChargePoints: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'hubject_operators',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  HubjectOperators.associate = (models) => {
    HubjectOperators.belongsTo(models.hubjectOperators, {
      foreignKey: {
        name: 'parentIdKey',
        field: 'parent_id',
      },
      as: 'parent',
    });
    HubjectOperators.hasMany(models.hubjectOperatorPrices, {
      foreignKey: {
        name: 'hubjectOperatorIdKey',
        field: 'hubject_operator_id',
      },
      as: 'hubjectOperatorHubjectOperatorPrices',
    });
    HubjectOperators.hasMany(models.hubjectOperators, {
      foreignKey: {
        name: 'parentIdKey',
        field: 'parent_id',
      },
      as: 'parentHubjectOperators',
    });
  };

  return HubjectOperators;
};
