// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Plans = sequelize.define('plans', {
    name: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    nameLocalized: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    description: {
      type: DataTypes.STRING,
    },
    descriptionLocalized: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    terms: {
      type: DataTypes.STRING,
    },
    termsLocalized: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    summary: {
      type: DataTypes.STRING,
    },
    summaryLocalized: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    supportEmail: {
      type: DataTypes.STRING,
    },
    identifier: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    service: {
      type: DataTypes.ENUM('custom','tax-refund','pro','enterprise'),
      allowNull: false,
    },
    models: {
      type: DataTypes.ENUM('selected','all'),
      allowNull: false,
    },
    for: {
      type: DataTypes.STRING,
      defaultValue: "team",
      allowNull: false,
    },
    priceModel: {
      type: DataTypes.STRING,
      defaultValue: "per_charge_point",
      allowNull: false,
    },
    subscriptionRequireApproval: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    subscriptionCancelable: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    payload: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    approvedAt: {
      type: DataTypes.DATE,
    },
    pendingAt: {
      type: DataTypes.DATE,
    },
    activeAt: {
      type: DataTypes.DATE,
    },
    deactivateAt: {
      type: DataTypes.DATE,
    },
    visibility: {
      type: DataTypes.ENUM('beta','alpha','all'),
      defaultValue: "all",
      allowNull: false,
    },
    activeSubscriptionCount: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    deletedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'plans',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Plans.associate = (models) => {
    Plans.belongsTo(models.users, {
      foreignKey: {
        name: 'approvedByUserIdKey',
        field: 'approved_by_user_id',
      },
      as: 'approvedByUser',
    });
    Plans.belongsTo(models.countries, {
      foreignKey: {
        name: 'countryIdKey',
        field: 'country_id',
      },
      as: 'country',
    });
    Plans.belongsTo(models.operators, {
      foreignKey: {
        name: 'operatorIdKey',
        field: 'operator_id',
      },
      as: 'operator',
    });
    Plans.belongsToMany(models.chargePointModels, {
      through: 'planChargePointModel',
      foreignKey: 'plan_id',
      otherKey: 'charge_point_model_id',
      as: 'chargePointModelsThroughPlanChargePointModels',
    });
    Plans.hasMany(models.planPrices, {
      foreignKey: {
        name: 'planIdKey',
        field: 'plan_id',
      },
      as: 'planPrices',
    });
    Plans.hasMany(models.subscriptions, {
      foreignKey: {
        name: 'planIdKey',
        field: 'plan_id',
      },
      as: 'subscriptions',
    });
  };

  return Plans;
};
