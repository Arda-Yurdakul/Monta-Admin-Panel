// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const NotificationEvents = sequelize.define('notificationEvents', {
    identifier: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    name: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    nameLocalized: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    icon: {
      type: DataTypes.STRING,
      defaultValue: "other",
      allowNull: false,
    },
    type: {
      type: DataTypes.ENUM('simple','1_action','2_actions'),
      defaultValue: "simple",
      allowNull: false,
    },
    title: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    titleLocalized: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    body: {
      type: DataTypes.STRING,
    },
    bodyLocalized: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    action1: {
      type: DataTypes.STRING,
      field: 'action_1',
    },
    action1Localized: {
      type: DataTypes.JSON,
      field: 'action_1_localized',
      allowNull: false,
    },
    action2: {
      type: DataTypes.STRING,
      field: 'action_2',
    },
    action2Localized: {
      type: DataTypes.JSON,
      field: 'action_2_localized',
      allowNull: false,
    },
    replace: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    push: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    inApp: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    deletedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'notification_events',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  NotificationEvents.associate = (models) => {
    NotificationEvents.hasMany(models.notificationEventUser, {
      foreignKey: {
        name: 'eventIdKey',
        field: 'event_id',
      },
      as: 'eventNotificationEventUsers',
    });
    NotificationEvents.hasMany(models.notifications, {
      foreignKey: {
        name: 'eventIdKey',
        field: 'event_id',
      },
      as: 'eventNotifications',
    });
  };

  return NotificationEvents;
};
