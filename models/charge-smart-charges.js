// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const ChargeSmartCharges = sequelize.define('chargeSmartCharges', {
    startTime: {
      type: DataTypes.DATE,
      field: 'start_time',
      allowNull: false,
    },
    stopTime: {
      type: DataTypes.DATE,
      field: 'stop_time',
      allowNull: false,
    },
    priorityGreen: {
      type: DataTypes.INTEGER,
      field: 'priority_green',
      allowNull: false,
    },
    priorityPrice: {
      type: DataTypes.INTEGER,
      field: 'priority_price',
      allowNull: false,
    },
    priorityCo2: {
      type: DataTypes.INTEGER,
      field: 'priority_co2',
      allowNull: false,
    },
    priorityRenewable: {
      type: DataTypes.INTEGER,
      field: 'priority_renewable',
      allowNull: false,
    },
    pauseEnabled: {
      type: DataTypes.INTEGER,
      field: 'pause_enabled',
      allowNull: false,
    },
    boundaries: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    prices: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    co2S: {
      type: DataTypes.JSON,
      field: 'co2s',
      allowNull: false,
    },
    renewables: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    result: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    resultAt: {
      type: DataTypes.DATE,
      field: 'result_at',
    },
    error: {
      type: DataTypes.STRING,
    },
    recalculate: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    recalculatedAt: {
      type: DataTypes.DATE,
      field: 'recalculated_at',
    },
    deletedAt: {
      type: DataTypes.DATE,
      field: 'deleted_at',
    },
    createdAt: {
      type: DataTypes.DATE,
      field: 'created_at',
    },
    updatedAt: {
      type: DataTypes.DATE,
      field: 'updated_at',
    },
  }, {
    tableName: 'charge_smart_charges',
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  ChargeSmartCharges.associate = (models) => {
    ChargeSmartCharges.hasMany(models.charges, {
      foreignKey: {
        name: 'smartChargeIdKey',
        field: 'smart_charge_id',
      },
      as: 'smartChargeCharges',
    });
  };

  return ChargeSmartCharges;
};
