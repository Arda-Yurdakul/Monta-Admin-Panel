// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const SmartChargeResults = sequelize.define('smartChargeResults', {
    boundaryStartAt: {
      type: DataTypes.DATE,
      field: 'boundary_start_at',
      allowNull: false,
    },
    boundaryEndAt: {
      type: DataTypes.DATE,
      field: 'boundary_end_at',
      allowNull: false,
    },
    boundaries: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    daysAPart: {
      type: DataTypes.INTEGER,
      field: 'days_a_part',
      allowNull: false,
    },
    priorityPrice: {
      type: DataTypes.INTEGER,
      field: 'priority_price',
      allowNull: false,
    },
    priorityCo2: {
      type: DataTypes.INTEGER,
      field: 'priority_co2',
      allowNull: false,
    },
    priorityRenewable: {
      type: DataTypes.INTEGER,
      field: 'priority_renewable',
      allowNull: false,
    },
    pauseEnabled: {
      type: DataTypes.INTEGER,
      field: 'pause_enabled',
      allowNull: false,
    },
    savingPrice: {
      type: DataTypes.DOUBLE,
      field: 'saving_price',
      allowNull: false,
    },
    savingCo2: {
      type: DataTypes.DOUBLE,
      field: 'saving_co2',
      allowNull: false,
    },
    savingRenewable: {
      type: DataTypes.DOUBLE,
      field: 'saving_renewable',
      allowNull: false,
    },
    totalKwh: {
      type: DataTypes.DOUBLE,
      field: 'total_kwh',
      allowNull: false,
    },
    totalCharges: {
      type: DataTypes.INTEGER,
      field: 'total_charges',
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
      field: 'created_at',
    },
    updatedAt: {
      type: DataTypes.DATE,
      field: 'updated_at',
    },
  }, {
    tableName: 'smart_charge_results',
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  SmartChargeResults.associate = (models) => {
    SmartChargeResults.belongsTo(models.countryAreas, {
      foreignKey: {
        name: 'countryAreaIdKey',
        field: 'country_area_id',
      },
      as: 'countryArea',
    });
    SmartChargeResults.belongsTo(models.currencies, {
      foreignKey: {
        name: 'currencyIdKey',
        field: 'currency_id',
      },
      as: 'currency',
    });
    SmartChargeResults.hasMany(models.smartChargeResultEntries, {
      foreignKey: {
        name: 'smartChargeResultIdKey',
        field: 'smart_charge_result_id',
      },
      as: 'smartChargeResultSmartChargeResultEntries',
    });
    SmartChargeResults.hasMany(models.smartChargeResultUsers, {
      foreignKey: {
        name: 'smartChargeResultIdKey',
        field: 'smart_charge_result_id',
      },
      as: 'smartChargeResultSmartChargeResultUsers',
    });
  };

  return SmartChargeResults;
};
