// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Connectors = sequelize.define('connectors', {
    name: {
      type: DataTypes.STRING,
    },
    identifier: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    deletedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'connectors',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Connectors.associate = (models) => {
    Connectors.belongsToMany(models.chargePoints, {
      through: 'chargePointConnector',
      foreignKey: 'connector_id',
      otherKey: 'charge_point_id',
      as: 'chargePointsThroughChargePointConnectors',
    });
    Connectors.belongsToMany(models.chargePointGroups, {
      through: 'chargePointGroupConnector',
      foreignKey: 'connector_id',
      otherKey: 'charge_point_group_id',
      as: 'chargePointGroupsThroughChargePointGroupConnectors',
    });
    Connectors.belongsToMany(models.vehicles, {
      through: 'vehicleConnector',
      foreignKey: 'connector_id',
      otherKey: 'vehicle_id',
      as: 'vehiclesThroughVehicleConnectors',
    });
  };

  return Connectors;
};
