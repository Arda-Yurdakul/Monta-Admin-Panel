// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Deeplinks = sequelize.define('deeplinks', {
    slug: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    appUrl: {
      type: DataTypes.STRING,
    },
    webUrl: {
      type: DataTypes.STRING,
    },
    payload: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    visits: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    activeAt: {
      type: DataTypes.DATE,
    },
    system: {
      type: DataTypes.INTEGER,
      defaultValue: 0,
      allowNull: false,
    },
    ownerType: {
      type: DataTypes.STRING,
    },
    ownerId: {
      type: DataTypes.BIGINT,
    },
    deletedAt: {
      type: DataTypes.DATE,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'deeplinks',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Deeplinks.associate = (models) => {
    Deeplinks.hasMany(models.deeplinkPayloads, {
      foreignKey: {
        name: 'deeplinkIdKey',
        field: 'deeplink_id',
      },
      as: 'deeplinkPayloads',
    });
  };

  return Deeplinks;
};
