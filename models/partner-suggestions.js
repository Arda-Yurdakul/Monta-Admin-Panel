// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const PartnerSuggestions = sequelize.define('partnerSuggestions', {
    referenceType: {
      type: DataTypes.STRING,
    },
    referenceId: {
      type: DataTypes.BIGINT,
    },
    data: {
      type: DataTypes.JSON,
      allowNull: false,
    },
    acceptedAt: {
      type: DataTypes.DATE,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    deletedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'partner_suggestions',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  PartnerSuggestions.associate = (models) => {
    PartnerSuggestions.belongsTo(models.users, {
      foreignKey: {
        name: 'acceptedByUserIdKey',
        field: 'accepted_by_user_id',
      },
      as: 'acceptedByUser',
    });
    PartnerSuggestions.belongsTo(models.users, {
      foreignKey: {
        name: 'createdByUserIdKey',
        field: 'created_by_user_id',
      },
      as: 'createdByUser',
    });
  };

  return PartnerSuggestions;
};
